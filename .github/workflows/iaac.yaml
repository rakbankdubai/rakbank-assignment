name: terraform infra creation
on: workflow_dispatch  # You can trigger this workflow manually or on other events (push, pull_request)
jobs:
  build:
    name: terraform infra creation
    runs-on: ubuntu-latest  # You can choose a different runner (e.g., ubuntu-18.04) if needed
    steps:
      - name: Checkout
        uses: actions/checkout@v3  # Downloads your code from the repository

      - name: Setup AWS Credentials
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
            echo "Setting up AWS credentials"
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY

      - name: Terraform Init
        id: fmt
        run: terraform init
        working-directory: "./${{ inputs.working-directory }}"

      - name: Terraform fmt
        id: init
        run: terraform fmt -check
        working-directory: "./${{ inputs.working-directory }}"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: "./${{ inputs.working-directory }}"

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan --out ./tfplan -no-color
          terraform show -json ./tfplan > ./tfplan.json
        working-directory: "./${{ inputs.working-directory }}"

      - name: Terraform Apply
        id: apply
        if: contains(github.event.head_commit.message, 'terraform apply')
        run: terraform apply -auto-approve
        working-directory: "./${{ inputs.working-directory }}"

      - name: Terraform Destroy
        id: destroy
        if: contains(github.event.head_commit.message, 'terraform destroy')
        run: terraform destroy -auto-approve
        working-directory: "./${{ inputs.working-directory }}"
